{"version":3,"sources":["item/Item.styles.tsx","item/Item.tsx","CartItem/CartItem.styles.tsx","CartItem/CartItem.tsx","Cart/Cart.styles.tsx","Cart/Cart.tsx","App.styles.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyleButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","AddShoppingCart","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6c1ccf8c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper=styled.div`\n    display:flex;\n    justify-content:space-between;\n    flex-direction:column;\n    width:100%;\n    border:1px solid lightblue;\n    border-radius:20px;\n    height:100%;\n\n    button{\n        border-radius:0 0 20px 20px;\n    }\n\n    img{\n        max-height:250px;\n        object-fit:cover;\n        border-radius:20px 20px 0 0;\n    }\n\n    div{\n        font-family:Arial, Helvetica, sans-serif;\n        padding:1rem;\n        height:100%;\n    }\n`;\n\n","import Button from '@material-ui/core/Button';\n//types\nimport {CartItemType} from '../App';\n//styles\nimport {Wrapper} from './Item.styles';\n\ntype Props = {\n    item:CartItemType;\n    //is the function from App.tsx\n    handleAddToCart:(clickItem: CartItemType)=>void;\n}\n\n//react generic component, the FC is the type por the component, we are accepting the props\nconst Item: React.FC<Props> = ({item, handleAddToCart}) => (\n    <Wrapper>\n        <img src={item.image} alt={item.title}/>\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h3>{item.price}</h3>\n        </div>\n        <Button onClick ={()=>handleAddToCart(item)}>Add to Cart</Button>\n    </Wrapper>\n);\n\nexport default Item;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: Arial, Helvetica, sans-serif;\n  border-bottom: 1px solid lightblue;\n  padding-bottom: 20px;\n  div {\n    flex: 1;\n  }\n  .information,\n  .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n  img {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n  }\n`;","import Button from '@material-ui/core/Button'\n//types\nimport {CartItemType} from '../App';\n//styles\nimport {Wrapper} from './CartItem.styles';\n\ntype Props={\n    item:CartItemType;\n    addToCart:(clickedItem:CartItemType)=>void;\n    removeFromCart:(id:number)=>void;\n}\nconst CartItem: React.FC<Props> = ({item, addToCart,removeFromCart}) => <div>\n    <Wrapper>\n        <div>\n            <h3>{item.title}</h3>\n            <div className=\"information\">\n                <p>Price: ${item.price}</p>\n                <p>Total: ${(item.price*item.amount).toFixed(2)}</p>\n            </div>\n            <div className=\"buttons\">\n                <Button \n                size=\"small\"\n                disableElevation\n                variant=\"contained\"\n                onClick={()=>removeFromCart(item.id)}\n                >\n                -\n                </Button>\n                <p>{item.amount}</p>\n                <Button \n                size=\"small\"\n                disableElevation\n                variant=\"contained\"\n                onClick={()=>addToCart(item)}\n                >\n                +\n                </Button>\n\n            </div>\n        </div>\n        <img src={item.image} alt={item.title}/>\n    </Wrapper>\n\n</div>\n\nexport default CartItem","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n    font-family:arial;\n    width:500px;\n    padding:20px\n`","import CartItem from '../CartItem/CartItem';\n//styles\nimport {Wrapper} from './Cart.styles';\n\nimport {CartItemType} from '../App';\n\ntype Props={\n    cartItems:CartItemType[];\n    addToCart:(clickedItem:CartItemType)=> void;\n    removeFromCart:(id:number)=>void;\n}\n\nconst Cart:React.FC<Props>=({cartItems,addToCart,removeFromCart})=>{\n    const calculateTotal=(items:CartItemType[])=>\n    items.reduce((ack:number,item)=>ack+item.amount*item.price,0);\n    return(\n        <Wrapper>\n            <h2>Your shopping cart</h2>\n            {cartItems.length===0?<p>No items in cart</p>: null}\n            {cartItems.map(item =>(\n                <CartItem \n                key={item.id}\n                item={item}\n                addToCart={addToCart}\n                removeFromCart={removeFromCart}/>\n            ))}\n            <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n        </Wrapper>\n\n    )\n\n\n};\n\nexport default Cart;","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const Wrapper=styled.div`\n    margin:40px;\n\n`;\n\nexport const StyleButton = styled(IconButton)`\n    position:fixed;\n    z-index:100;\n    right:20px;\n    top:20px;\n`\n","\nimport {useState} from 'react'\nimport {useQuery} from 'react-query'\n//components\nimport Item from './item/Item'\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Badge from '@material-ui/core/Badge';\n\n//Styles\nimport {Wrapper, StyleButton} from './App.styles'\nimport { AddShoppingCart } from '@material-ui/icons';\n\n//types\nexport type CartItemType = {\n  id:number;\n  category:string;\n  description:string;\n  image:string;\n  price:number;\n  title:string;\n  amount:number;\n}\n\n\n\n\n//we gotta fetch from an api\nconst getProducts =  async (): Promise<CartItemType[]> =>\n//the first one is for when we convert to JSON\n//the secont one is the API calling itself\n await(await fetch('https://fakestoreapi.com/products')).json();\n\nfunction App() {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState ([] as CartItemType[])\n  const {data, isLoading, error}=useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  )\n  console.log(data);\n\n\n  const getTotalItems = (items: CartItemType[]) =>\n  //this iterates throuhg all the items in the cart\n  //and add the amount, it starts with zero\n   items.reduce((ack:number,item) => ack + item.amount,0);\n\n  const handleAddToCart = (clickedItem:CartItemType) => \n  {\n    setCartItems(prev=>{\n      const isItemInCart=prev.find(item=>item.id===clickedItem.id)\n      if(isItemInCart){\n        return prev.map(item=>(\n          item.id===clickedItem.id\n          ?{...item,amount:item.amount+1}\n          :item\n        ))\n      }\n      //first time the item is added, we add the item to the array and the amount to 1\n      return [...prev,{...clickedItem, amount:1}];\n\n    })\n  };\n\n  const handleRemoveFromCart = (id:number) => {\n    //the reduce is call in the previous state\n    setCartItems(prev =>\n      prev.reduce((ack,item)=>{\n        if(item.id===id){\n          if(item.amount===1) return ack;\n          //we remove 1 from the amount\n          return [...ack, {...item,amount:item.amount-1}];\n        }else{\n          return[...ack,item];\n        }\n        //the accumulator starts as an empty array with cartItemType\n      },[] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>\n\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={()=>setCartOpen(false)}>\n       <Cart \n       cartItems={cartItems}\n       addToCart={handleAddToCart}\n       removeFromCart={handleRemoveFromCart} />\n      </Drawer>\n      <StyleButton onClick={()=>setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'></Badge>\n        <AddShoppingCart/>\n      </StyleButton>\n      <Grid container spacing={3}>\n        {data?.map(item=>(\n          <Grid item key={item.id} xs={12} sm={4}>\n           <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n\n\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {QueryClient, QueryClientProvider} from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}